{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\Inventory Management\\\\my-app\\\\src\\\\Inventory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Inventory.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inventory = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const initialValue = {\n    name: \"\",\n    quantity: 0,\n    price: 0\n  };\n  const [formData, setFormData] = useState(initialValue);\n  const [editItem, setEditItem] = useState(null);\n  const [errors, setErrors] = useState({}); // Added errors state\n\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const validateValues = data => {\n    let validationErrors = {};\n    if (data.name === \"\") {\n      validationErrors.name = \"Please enter Item Name\";\n    }\n    if (data.quantity <= 0) {\n      validationErrors.quantity = \"Quantity must be greater than 0\";\n    }\n    if (data.price <= 0) {\n      validationErrors.price = \"Price must be greater than 0\";\n    }\n    return validationErrors;\n  };\n  useEffect(() => {\n    const fetchInventoryData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/items\");\n        if (response.ok) {\n          const data = await response.json();\n          setItems(data);\n        } else {\n          console.error(\"Failed to fetch inventory data. Server returned:\", response.status, response.statusText);\n        }\n      } catch (error) {\n        console.error(\"Error fetching inventory data:\", error);\n      }\n    };\n    fetchInventoryData();\n  }, []);\n  const handleFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    setErrors({}); // Clear errors when the user makes changes\n  };\n\n  const handleAddItem = async () => {\n    const validationErrors = validateValues(formData);\n    if (Object.keys(validationErrors).length === 0) {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/items\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(formData)\n        });\n        if (response.ok) {\n          const newItem = await response.json();\n          setItems([...items, newItem]);\n          setFormData(initialValue);\n        } else {\n          setErrors(\"An unknown error occurred !!\");\n        }\n      } catch (error) {\n        console.error(\"Error adding item:\", error);\n        setErrors(\"An unknown error occurred\");\n      }\n    } else {\n      setErrors(validationErrors); // Set validation errors in state\n    }\n  };\n\n  const handleUpdateItem = async () => {\n    const validationErrors = validateValues(formData);\n    if (Object.keys(validationErrors).length === 0) {\n      try {\n        const itemId = items[editItem]._id;\n        const url = `http://localhost:5000/api/items/${itemId}`;\n        const method = \"PUT\";\n        await fetch(url, {\n          method,\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(formData)\n        });\n        const updatedItem = {\n          ...items[editItem],\n          ...formData\n        };\n        const updatedItems = [...items];\n        updatedItems[editItem] = updatedItem;\n        setItems(updatedItems);\n        setFormData(initialValue);\n        setEditItem(null);\n        setSuccessMessage(\"Updated successfully\");\n      } catch (error) {\n        console.error(\"Error Updating item:\", error);\n      }\n    } else {\n      setErrors(validationErrors);\n    }\n  };\n  const handleEditItem = index => {\n    setFormData(items[index]);\n    setEditItem(index);\n  };\n  const handleDeleteItem = async itemId => {\n    try {\n      const url = `http://localhost:5000/api/items/${itemId}`;\n      const method = 'DELETE';\n      const response = await fetch(url, {\n        method\n      });\n      if (response.status === 200) {\n        const updatedItems = items.filter(item => item._id !== itemId);\n        setItems(updatedItems);\n        setSuccessMessage(\"Deleted Sucessfully\");\n      } else {\n        console.error('Failed to delete item');\n      }\n    } catch (error) {\n      console.error('Error deleting item:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Inventory Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Item Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Item Name\",\n          value: formData.name,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errorMsg\",\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Item Quantity:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"quantity\",\n          placeholder: \"Quantity\",\n          value: formData.quantity,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), errors.quantity && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errorMsg\",\n          children: errors.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Item Price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"price\",\n          placeholder: \"Price\",\n          value: formData.price,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), errors.price && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errorMsg\",\n          children: errors.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), editItem !== null ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleUpdateItem,\n        children: \"Update Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleAddItem,\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"succ-msg\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Inventory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-dark\",\n                onClick: () => handleEditItem(index),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => handleDeleteItem(item._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)]\n          }, item._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(Inventory, \"XnJbGTOjhYakYr3TcvSmjuFETmY=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Inventory","_s","items","setItems","initialValue","name","quantity","price","formData","setFormData","editItem","setEditItem","errors","setErrors","successMessage","setSuccessMessage","validateValues","data","validationErrors","fetchInventoryData","response","fetch","ok","json","console","error","status","statusText","handleFormChange","e","value","target","handleAddItem","Object","keys","length","method","headers","body","JSON","stringify","newItem","handleUpdateItem","itemId","_id","url","updatedItem","updatedItems","handleEditItem","index","handleDeleteItem","filter","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/Inventory Management/my-app/src/Inventory.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Inventory.css\";\r\n\r\nconst Inventory = () => {\r\n  const [items, setItems] = useState([]);\r\n  const initialValue = {\r\n    name: \"\",\r\n    quantity: 0,\r\n    price: 0,\r\n  };\r\n  const [formData, setFormData] = useState(initialValue);\r\n\r\n  const [editItem, setEditItem] = useState(null);\r\n\r\n  const [errors, setErrors] = useState({}); // Added errors state\r\n  \r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  const validateValues = (data) => {\r\n    let validationErrors = {};\r\n    if (data.name === \"\") {\r\n      validationErrors.name = \"Please enter Item Name\";\r\n    }\r\n    if (data.quantity <= 0) {\r\n      validationErrors.quantity = \"Quantity must be greater than 0\";\r\n    }\r\n    if (data.price <= 0) {\r\n      validationErrors.price = \"Price must be greater than 0\";\r\n    }\r\n    return validationErrors;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchInventoryData = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/items\");\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setItems(data);\r\n        } else {\r\n          console.error(\"Failed to fetch inventory data. Server returned:\", response.status, response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching inventory data:\", error);\r\n      }\r\n    };\r\n  \r\n    fetchInventoryData();\r\n  }, []);\r\n\r\n  const handleFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n    setErrors({}); // Clear errors when the user makes changes\r\n  };\r\n\r\n  const handleAddItem = async () => {\r\n\r\n\r\n    const validationErrors = validateValues(formData);\r\n    if (Object.keys(validationErrors).length === 0) {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/items\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(formData),\r\n          });\r\n\r\n          if(response.ok){\r\n            const newItem = await response.json();\r\n            setItems([...items, newItem]);\r\n            setFormData(initialValue);\r\n          }\r\n          else {\r\n            setErrors(\"An unknown error occurred !!\");\r\n          }\r\n          \r\n      } catch (error) {\r\n        console.error(\"Error adding item:\", error);\r\n        setErrors(\"An unknown error occurred\");\r\n      }\r\n\r\n      \r\n    } else {\r\n      setErrors(validationErrors); // Set validation errors in state\r\n    }\r\n  };\r\n\r\n  const handleUpdateItem = async () => {\r\n    const validationErrors = validateValues(formData);\r\n    \r\n    if (Object.keys(validationErrors).length === 0) {\r\n      try {\r\n        const itemId = items[editItem]._id;\r\n        const url = `http://localhost:5000/api/items/${itemId}`;\r\n        const method = \"PUT\";\r\n        \r\n        \r\n        await fetch(url, {\r\n          method,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(formData), \r\n        });\r\n        \r\n        const updatedItem = { ...items[editItem], ...formData };\r\n        const updatedItems = [...items];\r\n        updatedItems[editItem] = updatedItem;\r\n        \r\n        setItems(updatedItems);\r\n        setFormData(initialValue);\r\n        setEditItem(null);\r\n        setSuccessMessage(\"Updated successfully\");\r\n      } catch (error) {\r\n        console.error(\"Error Updating item:\", error);\r\n      }\r\n    } else {\r\n      setErrors(validationErrors); \r\n    }\r\n  };\r\n  \r\n\r\n  const handleEditItem = (index) => {\r\n    setFormData(items[index]);\r\n    setEditItem(index);\r\n  };\r\n  \r\n  \r\n  const handleDeleteItem = async (itemId) => {\r\n    try {\r\n      const url = `http://localhost:5000/api/items/${itemId}`;\r\n      const method = 'DELETE';\r\n\r\n      const response = await fetch(url, {\r\n        method,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        \r\n        const updatedItems = items.filter(item => item._id !== itemId);\r\n        setItems(updatedItems);\r\n        setSuccessMessage(\"Deleted Sucessfully\");\r\n      } else {\r\n        \r\n        console.error('Failed to delete item');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting item:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Inventory Management</h1>\r\n      <div>\r\n        <h2>Add New Item</h2>\r\n        <label>\r\n          Item Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Item Name\"\r\n            value={formData.name}\r\n            onChange={handleFormChange}\r\n          />\r\n          {errors.name && <div className=\"errorMsg\">{errors.name}</div>}\r\n        </label>\r\n        <label>\r\n          Item Quantity:\r\n          <input\r\n            type=\"number\"\r\n            name=\"quantity\"\r\n            placeholder=\"Quantity\"\r\n            value={formData.quantity}\r\n            onChange={handleFormChange}\r\n          />\r\n          {errors.quantity && <div className=\"errorMsg\">{errors.quantity}</div>}\r\n        </label>\r\n        <label>\r\n          Item Price:\r\n          <input\r\n            type=\"number\"\r\n            name=\"price\"\r\n            placeholder=\"Price\"\r\n            value={formData.price}\r\n            onChange={handleFormChange}\r\n          />\r\n          {errors.price && <div className=\"errorMsg\">{errors.price}</div>}\r\n        </label>\r\n        {editItem !== null ? (\r\n          <button className=\"btn btn-primary\" onClick={handleUpdateItem}>\r\n            Update Item\r\n          </button>\r\n        ) : (\r\n          <button className=\"btn btn-primary\" onClick={handleAddItem}>\r\n            Add Item\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <div className=\"succ-msg\">{successMessage}</div>\r\n        <h2>Inventory</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Quantity</th>\r\n              <th>Price</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {items.map((item, index) => (\r\n              <tr key={item._id}>\r\n                <td>{item.name}</td>\r\n                <td>{item.quantity}</td>\r\n                <td>${item.price}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-dark\"\r\n                    onClick={() => handleEditItem(index)}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => handleDeleteItem(item._id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Inventory;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMQ,YAAY,GAAG;IACnBC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,CAAC;IACXC,KAAK,EAAE;EACT,CAAC;EACD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAACQ,YAAY,CAAC;EAEtD,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE1C,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMoB,cAAc,GAAIC,IAAI,IAAK;IAC/B,IAAIC,gBAAgB,GAAG,CAAC,CAAC;IACzB,IAAID,IAAI,CAACZ,IAAI,KAAK,EAAE,EAAE;MACpBa,gBAAgB,CAACb,IAAI,GAAG,wBAAwB;IAClD;IACA,IAAIY,IAAI,CAACX,QAAQ,IAAI,CAAC,EAAE;MACtBY,gBAAgB,CAACZ,QAAQ,GAAG,iCAAiC;IAC/D;IACA,IAAIW,IAAI,CAACV,KAAK,IAAI,CAAC,EAAE;MACnBW,gBAAgB,CAACX,KAAK,GAAG,8BAA8B;IACzD;IACA,OAAOW,gBAAgB;EACzB,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACd,MAAMsB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;QAC/D,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAML,IAAI,GAAG,MAAMG,QAAQ,CAACG,IAAI,CAAC,CAAC;UAClCpB,QAAQ,CAACc,IAAI,CAAC;QAChB,CAAC,MAAM;UACLO,OAAO,CAACC,KAAK,CAAC,kDAAkD,EAAEL,QAAQ,CAACM,MAAM,EAAEN,QAAQ,CAACO,UAAU,CAAC;QACzG;MACF,CAAC,CAAC,OAAOF,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDN,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAM;MAAExB,IAAI;MAAEyB;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCtB,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACH,IAAI,GAAGyB;IAAM,CAAC,CAAC;IAC3CjB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC;;EAED,MAAMmB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAGhC,MAAMd,gBAAgB,GAAGF,cAAc,CAACR,QAAQ,CAAC;IACjD,IAAIyB,MAAM,CAACC,IAAI,CAAChB,gBAAgB,CAAC,CAACiB,MAAM,KAAK,CAAC,EAAE;MAC9C,IAAI;QACF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;UAC5De,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChC,QAAQ;QAC/B,CAAC,CAAC;QAEF,IAAGY,QAAQ,CAACE,EAAE,EAAC;UACb,MAAMmB,OAAO,GAAG,MAAMrB,QAAQ,CAACG,IAAI,CAAC,CAAC;UACrCpB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEuC,OAAO,CAAC,CAAC;UAC7BhC,WAAW,CAACL,YAAY,CAAC;QAC3B,CAAC,MACI;UACHS,SAAS,CAAC,8BAA8B,CAAC;QAC3C;MAEJ,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1CZ,SAAS,CAAC,2BAA2B,CAAC;MACxC;IAGF,CAAC,MAAM;MACLA,SAAS,CAACK,gBAAgB,CAAC,CAAC,CAAC;IAC/B;EACF,CAAC;;EAED,MAAMwB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMxB,gBAAgB,GAAGF,cAAc,CAACR,QAAQ,CAAC;IAEjD,IAAIyB,MAAM,CAACC,IAAI,CAAChB,gBAAgB,CAAC,CAACiB,MAAM,KAAK,CAAC,EAAE;MAC9C,IAAI;QACF,MAAMQ,MAAM,GAAGzC,KAAK,CAACQ,QAAQ,CAAC,CAACkC,GAAG;QAClC,MAAMC,GAAG,GAAI,mCAAkCF,MAAO,EAAC;QACvD,MAAMP,MAAM,GAAG,KAAK;QAGpB,MAAMf,KAAK,CAACwB,GAAG,EAAE;UACfT,MAAM;UACNC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChC,QAAQ;QAC/B,CAAC,CAAC;QAEF,MAAMsC,WAAW,GAAG;UAAE,GAAG5C,KAAK,CAACQ,QAAQ,CAAC;UAAE,GAAGF;QAAS,CAAC;QACvD,MAAMuC,YAAY,GAAG,CAAC,GAAG7C,KAAK,CAAC;QAC/B6C,YAAY,CAACrC,QAAQ,CAAC,GAAGoC,WAAW;QAEpC3C,QAAQ,CAAC4C,YAAY,CAAC;QACtBtC,WAAW,CAACL,YAAY,CAAC;QACzBO,WAAW,CAAC,IAAI,CAAC;QACjBI,iBAAiB,CAAC,sBAAsB,CAAC;MAC3C,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC,MAAM;MACLZ,SAAS,CAACK,gBAAgB,CAAC;IAC7B;EACF,CAAC;EAGD,MAAM8B,cAAc,GAAIC,KAAK,IAAK;IAChCxC,WAAW,CAACP,KAAK,CAAC+C,KAAK,CAAC,CAAC;IACzBtC,WAAW,CAACsC,KAAK,CAAC;EACpB,CAAC;EAGD,MAAMC,gBAAgB,GAAG,MAAOP,MAAM,IAAK;IACzC,IAAI;MACF,MAAME,GAAG,GAAI,mCAAkCF,MAAO,EAAC;MACvD,MAAMP,MAAM,GAAG,QAAQ;MAEvB,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAACwB,GAAG,EAAE;QAChCT;MACF,CAAC,CAAC;MAEF,IAAIhB,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;QAE3B,MAAMqB,YAAY,GAAG7C,KAAK,CAACiD,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACR,GAAG,KAAKD,MAAM,CAAC;QAC9DxC,QAAQ,CAAC4C,YAAY,CAAC;QACtBhC,iBAAiB,CAAC,qBAAqB,CAAC;MAC1C,CAAC,MAAM;QAELS,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;MACxC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACE1B,OAAA;IAAKsD,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBvD,OAAA;MAAAuD,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7B3D,OAAA;MAAAuD,QAAA,gBACEvD,OAAA;QAAAuD,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB3D,OAAA;QAAAuD,QAAA,GAAO,YAEL,eAAAvD,OAAA;UACE4D,IAAI,EAAC,MAAM;UACXtD,IAAI,EAAC,MAAM;UACXuD,WAAW,EAAC,WAAW;UACvB9B,KAAK,EAAEtB,QAAQ,CAACH,IAAK;UACrBwD,QAAQ,EAAEjC;QAAiB;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,EACD9C,MAAM,CAACP,IAAI,iBAAIN,OAAA;UAAKsD,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAE1C,MAAM,CAACP;QAAI;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,eACR3D,OAAA;QAAAuD,QAAA,GAAO,gBAEL,eAAAvD,OAAA;UACE4D,IAAI,EAAC,QAAQ;UACbtD,IAAI,EAAC,UAAU;UACfuD,WAAW,EAAC,UAAU;UACtB9B,KAAK,EAAEtB,QAAQ,CAACF,QAAS;UACzBuD,QAAQ,EAAEjC;QAAiB;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,EACD9C,MAAM,CAACN,QAAQ,iBAAIP,OAAA;UAAKsD,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAE1C,MAAM,CAACN;QAAQ;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eACR3D,OAAA;QAAAuD,QAAA,GAAO,aAEL,eAAAvD,OAAA;UACE4D,IAAI,EAAC,QAAQ;UACbtD,IAAI,EAAC,OAAO;UACZuD,WAAW,EAAC,OAAO;UACnB9B,KAAK,EAAEtB,QAAQ,CAACD,KAAM;UACtBsD,QAAQ,EAAEjC;QAAiB;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,EACD9C,MAAM,CAACL,KAAK,iBAAIR,OAAA;UAAKsD,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAE1C,MAAM,CAACL;QAAK;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,EACPhD,QAAQ,KAAK,IAAI,gBAChBX,OAAA;QAAQsD,SAAS,EAAC,iBAAiB;QAACS,OAAO,EAAEpB,gBAAiB;QAAAY,QAAA,EAAC;MAE/D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAET3D,OAAA;QAAQsD,SAAS,EAAC,iBAAiB;QAACS,OAAO,EAAE9B,aAAc;QAAAsB,QAAA,EAAC;MAE5D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACN3D,OAAA;MAAAuD,QAAA,gBACEvD,OAAA;QAAKsD,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAExC;MAAc;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAChD3D,OAAA;QAAAuD,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB3D,OAAA;QAAAuD,QAAA,gBACEvD,OAAA;UAAAuD,QAAA,eACEvD,OAAA;YAAAuD,QAAA,gBACEvD,OAAA;cAAAuD,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACb3D,OAAA;cAAAuD,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjB3D,OAAA;cAAAuD,QAAA,EAAI;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACd3D,OAAA;cAAAuD,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACR3D,OAAA;UAAAuD,QAAA,EACGpD,KAAK,CAAC6D,GAAG,CAAC,CAACX,IAAI,EAAEH,KAAK,kBACrBlD,OAAA;YAAAuD,QAAA,gBACEvD,OAAA;cAAAuD,QAAA,EAAKF,IAAI,CAAC/C;YAAI;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpB3D,OAAA;cAAAuD,QAAA,EAAKF,IAAI,CAAC9C;YAAQ;cAAAiD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxB3D,OAAA;cAAAuD,QAAA,GAAI,GAAC,EAACF,IAAI,CAAC7C,KAAK;YAAA;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtB3D,OAAA;cAAAuD,QAAA,gBACEvD,OAAA;gBACEsD,SAAS,EAAC,cAAc;gBACxBS,OAAO,EAAEA,CAAA,KAAMd,cAAc,CAACC,KAAK,CAAE;gBAAAK,QAAA,EACtC;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACT3D,OAAA;gBACEsD,SAAS,EAAC,gBAAgB;gBAC1BS,OAAO,EAAEA,CAAA,KAAMZ,gBAAgB,CAACE,IAAI,CAACR,GAAG,CAAE;gBAAAU,QAAA,EAC3C;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC;UAAA,GAjBEN,IAAI,CAACR,GAAG;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAkBb,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzD,EAAA,CA9OID,SAAS;AAAAgE,EAAA,GAAThE,SAAS;AA+Of,eAAeA,SAAS;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}